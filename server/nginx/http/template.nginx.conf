upstream app {
	# Enable this for running other app on localhost (as dev, or otherwise)
	# server host.docker.internal:8080;
	$APP_HOST
}

upstream api {
	# Enable this for running api on localhost (as dev, or otherwise)
	# server host.docker.internal:8085;
	$API_HOST
}

proxy_cache_path /tmp/cache/app levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=600s use_temp_path=off;
proxy_cache_path /tmp/cache/api levels=1:2 keys_zone=api_cache:2m max_size=100m inactive=600s use_temp_path=off;

proxy_cache_valid any 60s;
add_header X-Cache-Status $upstream_cache_status;

server {
	listen 80;
	server_name $hostname localhost;
	server_tokens off;

	if ($bad_client) { return 444; }

	# Enable this when you are ready to deploy
	modsecurity $MODSEC;
	modsecurity_rules_file /etc/nginx/modsec/main.conf;


	location ~ ^/([^/])+\.(sh|pl|py|lua|inc|phar|php_|log|ini|md|sql|conf|yml|zip|tar|.+gz)$ { deny all; }
	location ~ /\.(svn|git|hg|htpasswd|bash|ssh) { deny all; }
	location ~ /\. { log_not_found off; deny all; }

	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	error_page 444 500 502 503 504 /50x.html;
	location = /50x.html {
		root /var/www/error;
		# internal;
	}
	error_page 400 /400.html;
	location = /400.html {
		root /var/www/error;
		# internal;
	}
	error_page 401 /401.html;
	location = /401.html {
		root /var/www/error;
		# internal;
	}
	error_page 403 /403.html;
	location = /403.html {
		root /var/www/error;
		# internal;
	}

	error_page 404 /404.html;
	location = /404.html {
		root /var/www/error;
		# internal;
	}


	location /api {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $api_hosts api;
		limit_except GET POST { deny all; }
		proxy_pass http://$api_hosts;
		# proxy_cache api_cache;
		# proxy_cache_key $proxy_host$request_uri$cookie_jsessionid;
	}

	location /api/ {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $api_hosts api;
		limit_except GET POST { deny all; }
		proxy_pass http://$api_hosts;
		# proxy_cache api_cache;
	}

	location / {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $app_hosts app;
		limit_except GET POST { deny all; }
		proxy_pass http://$app_hosts;
		proxy_cache app_cache;
	}
}


server {
	listen 443 default_server http2;
	listen [::]:443 http2;
	# set $host_name YOUR_SERVER_HOST_NAME;
	server_name $host_name localhost;

	if ($bad_client) { return 444; }
	modsecurity $MODSEC;
	modsecurity_rules_file /etc/nginx/modsec/main.conf;



	$HTTPS_COMMENT listen ssl;	
	$HTTPS_COMMENT ssl_certificate /etc/nginx/ssl/live/DOMAIN_NAME_HERE/fullchain.pem;
	$HTTPS_COMMENT ssl_certificate_key /etc/nginx/ssl/live/DOMAIN_NAME_HERE/privkey.pem;


	proxy_set_header X-Forwarded-Proto $scheme;
	resolver 127.0.0.11 1.1.1.1 1.0.0.1;

	error_page 444 500 502 503 504 /50x.html;
	location = /50x.html {
		root /var/www/error;
		internal;
	}
	error_page 400 /400.html;
	location = /400.html {
		root /var/www/error;
		internal;
	}
	error_page 401 /401.html;
	location = /401.html {
		root /var/www/error;
		internal;
	}
	error_page 403 /403.html;
	location = /403.html {
		root /var/www/error;
		internal;
	}

	error_page 404 /404.html;
	location = /404.html {
		root /var/www/error;
		internal;
	}

	location /api {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $api_hosts api;
		limit_except GET POST { deny all; }
		proxy_pass http://$api_hosts;
	}

	location /api/ {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $api_hosts api;
		limit_except GET POST { deny all; }
		proxy_pass http://$api_hosts;
	}

	location / {
		resolver 127.0.0.11 1.1.1.1 1.0.0.1;
		set $app_hosts app;
		limit_except GET POST { deny all; }
		proxy_pass http://$app_hosts;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_cache app_cache;
	}
}

